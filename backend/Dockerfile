# =============================================================================
# DOCKERFILE FOR SPRING BOOT BACKEND APPLICATION
# =============================================================================
# 
# This Dockerfile builds a Docker image for the backend library
# management application based on Spring Boot.
# 
# Steps:
# 1. Uses OpenJDK 17 as base image
# 2. Sets up working directory
# 3. Copies Maven configuration files
# 4. Copies source code
# 5. Installs Maven and compiles the application
# 6. Exposes port 8080
# 7. Starts the application
#
# =============================================================================

# Base image : OpenJDK 17 with slim distribution (lighter)
FROM openjdk:17-jdk-slim

# Sets the working directory in the container
WORKDIR /app

# Copies pom.xml file to install Maven dependencies
# This step allows leveraging Docker cache for dependencies
COPY pom.xml .

# Copies application source code
# Includes all Java files and resources
COPY src ./src

# Installs Maven and compiles the application
# - apt-get update : Updates package list
# - apt-get install -y maven : Installs Maven
# - mvn clean package -DskipTests : Compiles application without running tests
RUN apt-get update && apt-get install -y maven
RUN mvn clean package -DskipTests

# Exposes port 8080 for HTTP connections
# This port corresponds to the one configured in application.properties
EXPOSE 8080

# Command to start the Spring Boot application
# Uses the JAR generated by Maven in the target folder
CMD ["java", "-jar", "target/management-0.0.1-SNAPSHOT.jar"]
